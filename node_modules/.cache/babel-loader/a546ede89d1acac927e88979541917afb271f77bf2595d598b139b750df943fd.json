{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\xujia\\\\OneDrive\\\\\\u684C\\u9762\\\\react-jokes-classes\\\\src\\\\JokeList.js\";\n/*import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";*/\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass JokeList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n  componentDidMount() {\n    if (this.state.jokes.length === 0) this.getJokes();\n  }\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let seenJokes = new Set();\n    try {\n      while (j.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: {\n            Accept: \"application/json\"\n          }\n        });\n        let {\n          status,\n          ...jokeObj\n        } = res.data;\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({\n            ...jokeObj,\n            votes: 0\n          });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n      this.setState({\n        jokes: j\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  generateNewJokes() {\n    this.setState({\n      jokes: []\n    }, this.getJokes);\n  }\n  vote(id, delta) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => j.id === id ? {\n        ...j,\n        votes: j.votes + delta\n      } : j)\n    }));\n  }\n  render() {\n    if (this.state.jokes.length) {\n      let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"JokeList\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"JokeList-getmore\",\n          onClick: this.generateNewJokes,\n          children: \"Get New Jokes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), sortedJokes.map(j => /*#__PURE__*/_jsxDEV(Joke, {\n          text: j.joke,\n          id: j.id,\n          votes: j.votes,\n          vote: this.vote\n        }, j.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  }\n}\nJokeList.defaultProps = {\n  numJokesToGet: 10\n};\nexport default JokeList;\n\n/*function JokeList({ numJokesToGet = 10 }) {\n  const [jokes, setJokes] = useState([]);\n\n  /* get jokes if there are no jokes */\n\n/*useEffect(function() {\n  async function getJokes() {\n    let j = [...jokes];\n    let seenJokes = new Set();\n    try {\n      while (j.length < numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" }\n        });\n        let { status, ...jokeObj } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj, votes: 0 });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n      setJokes(j);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n   if (jokes.length === 0) getJokes();\n}, [jokes, numJokesToGet]);\n /* empty joke list and then call getJokes */\n\n/*function generateNewJokes() {\n  setJokes([]);\n}\n /* change vote for this id by delta (+1 or -1) */\n\n/*function vote(id, delta) {\n  setJokes(allJokes =>\n    allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n  );\n}\n /* render: either loading spinner or list of sorted jokes. */\n\n/*if (jokes.length) {\n  let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n\n  return (\n    <div className=\"JokeList\">\n      <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n        Get New Jokes\n      </button>\n\n      {sortedJokes.map(j => (\n        <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n      ))}\n    </div>\n  );\n}\n return null;\n}\nexport default JokeList;*/","map":{"version":3,"names":["React","Component","axios","Joke","jsxDEV","_jsxDEV","JokeList","constructor","props","state","jokes","generateNewJokes","bind","vote","componentDidMount","length","getJokes","j","seenJokes","Set","numJokesToGet","res","get","headers","Accept","status","jokeObj","data","has","id","add","push","votes","console","error","setState","e","log","delta","st","map","render","sortedJokes","sort","a","b","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","text","joke","defaultProps"],"sources":["C:/Users/xujia/OneDrive/桌面/react-jokes-classes/src/JokeList.js"],"sourcesContent":["/*import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";*/\n\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: []\n    };\n    this.generateNewJokes = this.generateNewJokes.bind(this);\n    this.vote = this.vote.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length === 0) this.getJokes();\n  }\n\n  async getJokes() {\n    let j = [...this.state.jokes];\n    let seenJokes = new Set();\n    try {\n      while (j.length < this.props.numJokesToGet) {\n        let res = await axios.get(\"https://icanhazdadjoke.com\", {\n          headers: { Accept: \"application/json\" }\n        });\n        let { status, ...jokeObj } = res.data;\n\n        if (!seenJokes.has(jokeObj.id)) {\n          seenJokes.add(jokeObj.id);\n          j.push({ ...jokeObj, votes: 0 });\n        } else {\n          console.error(\"duplicate found!\");\n        }\n      }\n      this.setState({ jokes: j });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  generateNewJokes() {\n    this.setState({ jokes: [] }, this.getJokes);\n  }\n\n  vote(id, delta) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j =>\n        j.id === id ? { ...j, votes: j.votes + delta } : j\n      )\n    }));\n  }\n\n  render() {\n    if (this.state.jokes.length) {\n      let sortedJokes = [...this.state.jokes].sort((a, b) => b.votes - a.votes);\n\n      return (\n        <div className=\"JokeList\">\n          <button className=\"JokeList-getmore\" onClick={this.generateNewJokes}>\n            Get New Jokes\n          </button>\n\n          {sortedJokes.map(j => (\n            <Joke\n              text={j.joke}\n              key={j.id}\n              id={j.id}\n              votes={j.votes}\n              vote={this.vote}\n            />\n          ))}\n        </div>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default JokeList;\n\n\n/*function JokeList({ numJokesToGet = 10 }) {\n  const [jokes, setJokes] = useState([]);\n\n  /* get jokes if there are no jokes */\n\n  /*useEffect(function() {\n    async function getJokes() {\n      let j = [...jokes];\n      let seenJokes = new Set();\n      try {\n        while (j.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { status, ...jokeObj } = res.data;\n  \n          if (!seenJokes.has(jokeObj.id)) {\n            seenJokes.add(jokeObj.id);\n            j.push({ ...jokeObj, votes: 0 });\n          } else {\n            console.error(\"duplicate found!\");\n          }\n        }\n        setJokes(j);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    if (jokes.length === 0) getJokes();\n  }, [jokes, numJokesToGet]);\n\n  /* empty joke list and then call getJokes */\n\n  /*function generateNewJokes() {\n    setJokes([]);\n  }\n\n  /* change vote for this id by delta (+1 or -1) */\n\n  /*function vote(id, delta) {\n    setJokes(allJokes =>\n      allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n    );\n  }\n\n  /* render: either loading spinner or list of sorted jokes. */\n\n  /*if (jokes.length) {\n    let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  \n    return (\n      <div className=\"JokeList\">\n        <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n          Get New Jokes\n        </button>\n  \n        {sortedJokes.map(j => (\n          <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n\n}\n\nexport default JokeList;*/\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}